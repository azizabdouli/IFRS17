// src/app/components/ai-assistant/ai-assistant.component.ts

import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { IFRS17ApiService } from '../../services/ifrs17-api.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';

/**
 * üß† ASSISTANT IA IFRS17
 * Interface conversationnelle pour l'assistance en comptabilit√© d'assurance
 * Fonctionnalit√©s: chat IA, conseils actuariels, analyses pr√©dictives, aide contextuelle
 */

interface Message {
  id: number;
  type: 'user' | 'assistant' | 'system';
  content: string;
  timestamp: Date;
  suggestions?: string[];
  attachments?: any[];
}

@Component({
  selector: 'app-ai-assistant',
  templateUrl: './ai-assistant.component.html',
  styleUrls: ['./ai-assistant.component.scss'],
  standalone: true,
  imports: [CommonModule, FormsModule]
})
export class AIAssistantComponent implements OnInit, OnDestroy {
  
  @ViewChild('chatContainer') chatContainer!: ElementRef;
  @ViewChild('messageInput') messageInput!: ElementRef;
  
  private destroy$ = new Subject<void>();
  
  // √âtat du chat
  messages: Message[] = [];
  currentMessage = '';
  isTyping = false;
  isConnected = true;
  
  // Suggestions pr√©d√©finies
  suggestionsRapides = [
    'Comment calculer le CSM d\'une cohorte ?',
    'Quels sont les contrats on√©reux √† surveiller ?',
    'Analyse de la profitabilit√© du portefeuille automobile',
    'Recommandations pour optimiser les provisions IFRS17',
    'Tendances de sinistralit√© par ligne d\'activit√©',
    'Impact des changements d\'hypoth√®ses actuarielles'
  ];

  // Contexte actuariel
  contexteActuariel = {
    terminologieIFRS17: [
      'LRC - Liability for Remaining Coverage',
      'LIC - Liability for Incurred Claims', 
      'CSM - Contractual Service Margin',
      'RA - Risk Adjustment',
      'VIF - Value in Force',
      'PVFCF - Present Value of Future Cash Flows'
    ],
    domaines: [
      'Comptabilit√© IFRS17',
      'Actuariat Vie et Non-Vie',
      'Gestion des Risques',
      'Mod√©lisation Financi√®re',
      'Analyse Pr√©dictive',
      'Optimisation de Portefeuille'
    ]
  };

  constructor(private ifrs17Service: IFRS17ApiService) {}

  ngOnInit(): void {
    this.initializeChat();
    this.loadChatHistory();
  }

  ngOnDestroy(): void {
    this.destroy$.next();
    this.destroy$.complete();
  }

  // ================================
  // üöÄ INITIALISATION
  // ================================

  private initializeChat(): void {
    // Message de bienvenue
    const welcomeMessage: Message = {
      id: 1,
      type: 'assistant',
      content: `üèõÔ∏è **Bonjour ! Je suis votre assistant IA sp√©cialis√© en IFRS17.**

Je peux vous aider avec :
‚Ä¢ **Comptabilit√© d'assurance** selon la norme IFRS17
‚Ä¢ **Analyses actuarielles** et calculs de provisions
‚Ä¢ **D√©tection de contrats on√©reux** et optimisation
‚Ä¢ **Interpr√©tation des donn√©es** et recommandations ML
‚Ä¢ **Formation** sur les concepts IFRS17

Comment puis-je vous assister aujourd'hui ?`,
      timestamp: new Date(),
      suggestions: this.suggestionsRapides.slice(0, 3)
    };

    this.messages = [welcomeMessage];
  }

  private loadChatHistory(): void {
    // Simulation du chargement de l'historique
    console.log('üìö Chargement de l\'historique des conversations...');
  }

  // ================================
  // üí¨ GESTION DES MESSAGES
  // ================================

  sendMessage(): void {
    if (!this.currentMessage.trim()) return;

    // Ajouter le message utilisateur
    const userMessage: Message = {
      id: this.messages.length + 1,
      type: 'user',
      content: this.currentMessage,
      timestamp: new Date()
    };

    this.messages.push(userMessage);
    
    // Traiter la r√©ponse IA
    this.processAIResponse(this.currentMessage);
    
    // Nettoyer l'input
    this.currentMessage = '';
    
    // Scroll vers le bas
    setTimeout(() => this.scrollToBottom(), 100);
  }

  private processAIResponse(userInput: string): void {
    this.isTyping = true;
    
    // Simulation d'analyse et g√©n√©ration de r√©ponse
    setTimeout(() => {
      const response = this.generateAIResponse(userInput);
      
      const aiMessage: Message = {
        id: this.messages.length + 1,
        type: 'assistant',
        content: response.content,
        timestamp: new Date(),
        suggestions: response.suggestions
      };

      this.messages.push(aiMessage);
      this.isTyping = false;
      
      setTimeout(() => this.scrollToBottom(), 100);
    }, 1500 + Math.random() * 1000);
  }

  private generateAIResponse(input: string): { content: string; suggestions: string[] } {
    const lowerInput = input.toLowerCase();
    
    // R√©ponses contextuelles bas√©es sur les mots-cl√©s IFRS17
    if (lowerInput.includes('csm') || lowerInput.includes('contractual service margin')) {
      return {
        content: `üìä **Contractual Service Margin (CSM)**

Le CSM repr√©sente le profit non encore reconnu dans les contrats d'assurance. Voici les points cl√©s :

**üî∏ Calcul initial :**
‚Ä¢ CSM = PVFCF - Ajustement de risque - Flux de tr√©sorerie √† l'origine
‚Ä¢ Si n√©gatif ‚Üí Contrat on√©reux (perte imm√©diate)

**üî∏ √âvolution :**
‚Ä¢ D√©charge progressive sur la dur√©e du contrat
‚Ä¢ Ajustements pour modifications d'estimations
‚Ä¢ Impact des changements d'hypoth√®ses actuarielles

**üî∏ Suivi recommand√© :**
‚Ä¢ Analyse par cohorte mensuelle
‚Ä¢ Sensibilit√© aux hypoth√®ses
‚Ä¢ Reconciliation des mouvements`,
        suggestions: [
          'Montrer l\'√©volution CSM par cohorte',
          'Analyser la sensibilit√© du CSM aux hypoth√®ses',
          'Calculer l\'impact d\'un changement de taux'
        ]
      };
    }

    if (lowerInput.includes('contrat on√©reux') || lowerInput.includes('onereux')) {
      return {
        content: `üî¥ **Contrats On√©reux - D√©tection et Gestion**

**üìà Situation actuelle :**
‚Ä¢ **1,847 contrats** identifi√©s comme on√©reux
‚Ä¢ **Impact financier :** -23,4 M‚Ç¨
‚Ä¢ **Lignes les plus impact√©es :** Sant√© (65%), Automobile (28%)

**üéØ Recommandations imm√©diates :**
1. **R√©vision tarifaire** pour les nouveaux contrats
2. **Optimisation des provisions** sur l'existant  
3. **Analyse pr√©dictive** pour anticiper les d√©rives
4. **Actions correctives** sur les garanties

**üîç Monitoring sugg√©r√© :**
‚Ä¢ Alertes automatiques si CSM < 0
‚Ä¢ Suivi hebdomadaire par gestionnaire
‚Ä¢ Analyse des causes racines`,
        suggestions: [
          'Voir la liste d√©taill√©e des contrats on√©reux',
          'Analyser les causes par ligne d\'activit√©',
          'Proposer un plan d\'action correctif'
        ]
      };
    }

    if (lowerInput.includes('lrc') || lowerInput.includes('liability remaining coverage')) {
      return {
        content: `üìã **Liability for Remaining Coverage (LRC)**

**üí∞ Situation actuelle :**
‚Ä¢ **LRC Total :** 2,45 Md‚Ç¨
‚Ä¢ **√âvolution :** +3,2% vs mois pr√©c√©dent
‚Ä¢ **Composition :** CSM (13,3%) + RA (5,1%) + PVFCF (81,6%)

**üîç Analyse par ligne :**
‚Ä¢ **Automobile :** 862 M‚Ç¨ (35,2%)
‚Ä¢ **Habitation :** 704 M‚Ç¨ (28,7%)  
‚Ä¢ **Vie Individuelle :** 453 M‚Ç¨ (18,5%)
‚Ä¢ **Sant√© :** 297 M‚Ç¨ (12,1%)

**‚ö° Actions recommand√©es :**
‚Ä¢ Validation mensuelle des hypoth√®ses
‚Ä¢ R√©conciliation avec les syst√®mes sources
‚Ä¢ Test de suffisance des passifs`,
        suggestions: [
          'D√©tailler l\'√©volution LRC par cohorte',
          'Analyser les √©carts vs budget',
          'Projeter l\'√©volution sur 12 mois'
        ]
      };
    }

    if (lowerInput.includes('machine learning') || lowerInput.includes('pr√©diction') || lowerInput.includes('ml')) {
      return {
        content: `ü§ñ **Analyses ML & Pr√©dictives IFRS17**

**üéØ Mod√®les disponibles :**
‚Ä¢ **Profitabilit√© :** 96,4% pr√©cision (Excellent)
‚Ä¢ **Classification Risque :** 86,5% pr√©cision (Bon)
‚Ä¢ **Contrats On√©reux :** 78,9% pr√©cision (Satisfaisant)
‚Ä¢ **Pr√©diction Sinistres :** 82,1% pr√©cision (Bon)

**üìä Analyses en cours :**
‚Ä¢ Profitabilit√© future Auto (75% compl√©t√©)
‚Ä¢ D√©tection contrats on√©reux Sant√© (Termin√©)

**üí° Recommandations :**
1. **R√©entra√Æner** le mod√®le contrats on√©reux
2. **√âtendre** l'analyse pr√©dictive aux autres lignes
3. **Automatiser** la d√©tection d'anomalies
4. **Int√©grer** les r√©sultats ML dans le reporting`,
        suggestions: [
          'Lancer une nouvelle pr√©diction',
          'Voir les d√©tails des mod√®les ML',
          'Exporter les r√©sultats pr√©dictifs'
        ]
      };
    }

    // R√©ponse g√©n√©rique avec conseils actuariels
    return {
      content: `üß† **Assistant IA IFRS17 √† votre service !**

Je comprends votre question sur "${input}". Voici quelques domaines o√π je peux vous aider :

**üìö Expertise disponible :**
‚Ä¢ **Comptabilit√© IFRS17** - Calculs, provisions, reporting
‚Ä¢ **Actuariat** - Mod√©lisation, hypoth√®ses, projections  
‚Ä¢ **Analyse des donn√©es** - Interpr√©tation, tendances, KPIs
‚Ä¢ **Recommandations ML** - Optimisation, pr√©dictions
‚Ä¢ **Formation** - Concepts, m√©thodologies, bonnes pratiques

**üéØ Pour une r√©ponse plus pr√©cise, vous pouvez mentionner :**
‚Ä¢ Des termes techniques (CSM, LRC, LIC, RA...)
‚Ä¢ Une ligne d'activit√© sp√©cifique
‚Ä¢ Un type d'analyse souhait√©

Comment puis-je vous aider plus sp√©cifiquement ?`,
      suggestions: [
        'Expliquer les concepts IFRS17 de base',
        'Analyser les performances du portefeuille',
        'Donner des conseils d\'optimisation'
      ]
    };
  }

  // ================================
  // üéØ ACTIONS RAPIDES
  // ================================

  sendSuggestion(suggestion: string): void {
    this.currentMessage = suggestion;
    this.sendMessage();
  }

  clearChat(): void {
    this.messages = [];
    this.initializeChat();
  }

  exportChat(): void {
    const chatData = {
      conversation: this.messages,
      timestamp: new Date(),
      participant: 'Assistant IA IFRS17'
    };
    
    console.log('üíæ Export de la conversation:', chatData);
    // Ici, integration avec service d'export
  }

  // ================================
  // üîß UTILITAIRES
  // ================================

  private scrollToBottom(): void {
    try {
      this.chatContainer.nativeElement.scrollTop = this.chatContainer.nativeElement.scrollHeight;
    } catch(err) {
      console.log('Erreur scroll:', err);
    }
  }

  onKeyPress(event: KeyboardEvent): void {
    if (event.key === 'Enter' && !event.shiftKey) {
      event.preventDefault();
      this.sendMessage();
    }
  }

  formatMessage(content: string): string {
    // Conversion markdown simple pour l'affichage
    return content
      .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
      .replace(/\*(.*?)\*/g, '<em>$1</em>')
      .replace(/‚Ä¢/g, '&bull;')
      .replace(/\n/g, '<br>');
  }

  getMessageTime(timestamp: Date): string {
    return timestamp.toLocaleTimeString('fr-FR', { 
      hour: '2-digit', 
      minute: '2-digit' 
    });
  }

  // ================================
  // üìä M√âTHODES DE FILTRAGE
  // ================================

  getUserMessagesCount(): number {
    return this.messages.filter(m => m.type === 'user').length;
  }

  getAssistantMessagesCount(): number {
    return this.messages.filter(m => m.type === 'assistant').length;
  }
}